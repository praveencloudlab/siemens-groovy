WEB SERVICES
================

Web App
================
1. request driven
2. event driven

HTTP Status codes

-> 1x : 100 - 199 - information
-> 2x : 200 - 299 - success
-> 3x : 300 - 399 - redirection
-> 4x : 400 - 499 - client side error 
-> 5x : 500 - 599 - server side error

====================================================

 WEB SERVERS : 2 types
 1. SOAP : WSDL 
 2. REST : XML /TEXT

  REST : API'S => Application programming interface :

    api's: 
    	/api/products
    	/api/users
    	/api/market
    	/api/cart
    	/api/orders


   =======================

  
   	JAX-WS : SOAP - spec
   	JAX-RS : REST - spec
   		Rest Easy - JAX-RS
   		Jersy     - JAX-RS

    Spring-REST
    ==============



     49.23.145.9 => abc.com


     Creating a RESTful web service client
     ============================================

     JSON Server

       ecart app
       ================

        XML  : <book> ... </book>
       JSON : Java script object notation

        XML:
          <books>
          		<book id="1" title="abc" author:"xyz"/> 
          		<book id="1" title="abc" author:"xyz"/> 
          		<book id="1" title="abc" author:"xyz"/> 
          </books>

        JSON:
           
            books=[
            		{id:"1",title:"abc",author:"xyz"},
            		{id:"1",title:"abc",author:"xyz"},
            		{id:"1",title:"abc",author:"xyz"},
            		{id:"1",title:"abc",author:"xyz"}
                  ]  


         
        Set UP JSON server:
        ========================

        1. install node.js (Java script runtime envirinment)
        		https://nodejs.org/en (for windows and mac)
        		  
        		for Linux ubantu run following commands

        		 wget https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh
        		 bash install.sh
				 source ~/.bashrc
				 nvm -v
				 nvm list-remote
				 nvm install v18
				 nvm install node
				 nvm -v
				 node -v

        2. install json server
            apt npm i -g json-server


            {"products":
            [
            {"id":10,"name":"Laptop","price":45000,"description":"Dell Laptop"},
            {"id":11,"name":"Tab","price":120000,"description":"Ipad Pro 2022"},
            {"id":12,"name":"Mobile","price":94000,"description":"iPhone 13"},
            {"id":13,"name":"keyboard","price":1300,"description":"Wireless"},
            {"id":14,"name":"Mouse","price":2500,"description":"Dell Mouse"}
            ]

            json-server --watch products.json

            GET: http://localhost:3000/products
            GET: http://localhost:3000/products/1  => find by id
            GET: http://localhost:3000/products/?price=94000 => find by price
            GET: http://localhost:3000/products/?name=Laptop => find by name
            GET: http://localhost:3000/products/?id=10&id=11 => finds id 10 and 11

            







        








   








